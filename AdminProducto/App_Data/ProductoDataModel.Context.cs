//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminProducto.App_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductosEntities : DbContext
    {
        public ProductosEntities()
            : base("name=ProductosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Color> Color { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Modelo> Modelo { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Tipo_Compra> Tipo_Compra { get; set; }
        public virtual DbSet<Vendedor> Vendedor { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int Proc_Categoria_Actualiza(Nullable<int> categoriaID, string categoria_nombre)
        {
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            var categoria_nombreParameter = categoria_nombre != null ?
                new ObjectParameter("categoria_nombre", categoria_nombre) :
                new ObjectParameter("categoria_nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Categoria_Actualiza", categoriaIDParameter, categoria_nombreParameter);
        }
    
        public virtual ObjectResult<Proc_Categoria_Consulta_Result> Proc_Categoria_Consulta(Nullable<int> categoriaID)
        {
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Categoria_Consulta_Result>("Proc_Categoria_Consulta", categoriaIDParameter);
        }
    
        public virtual int Proc_Categoria_Inserta(string categoria_nombre)
        {
            var categoria_nombreParameter = categoria_nombre != null ?
                new ObjectParameter("categoria_nombre", categoria_nombre) :
                new ObjectParameter("categoria_nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Categoria_Inserta", categoria_nombreParameter);
        }
    
        public virtual int Proc_Color_Actualiza(Nullable<int> colorID, string color, string codigo)
        {
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("colorID", colorID) :
                new ObjectParameter("colorID", typeof(int));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Color_Actualiza", colorIDParameter, colorParameter, codigoParameter);
        }
    
        public virtual ObjectResult<Proc_Color_Consulta_Result> Proc_Color_Consulta(Nullable<int> colorID, string color)
        {
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("colorID", colorID) :
                new ObjectParameter("colorID", typeof(int));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Color_Consulta_Result>("Proc_Color_Consulta", colorIDParameter, colorParameter);
        }
    
        public virtual int Proc_Color_Inserta(string color, string codigo)
        {
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Color_Inserta", colorParameter, codigoParameter);
        }
    
        public virtual ObjectResult<Proc_Color_Producto_Consulta_Result> Proc_Color_Producto_Consulta(Nullable<int> colorID, Nullable<int> productoID)
        {
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("colorID", colorID) :
                new ObjectParameter("colorID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Color_Producto_Consulta_Result>("Proc_Color_Producto_Consulta", colorIDParameter, productoIDParameter);
        }
    
        public virtual int Proc_Color_Producto_Inserta(Nullable<int> colorID, Nullable<int> productoID)
        {
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("colorID", colorID) :
                new ObjectParameter("colorID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Color_Producto_Inserta", colorIDParameter, productoIDParameter);
        }
    
        public virtual int Proc_Estado_Actualiza(Nullable<int> estadoID, string estado)
        {
            var estadoIDParameter = estadoID.HasValue ?
                new ObjectParameter("estadoID", estadoID) :
                new ObjectParameter("estadoID", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Estado_Actualiza", estadoIDParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Proc_Estado_Consulta_Result> Proc_Estado_Consulta(Nullable<int> estadoID)
        {
            var estadoIDParameter = estadoID.HasValue ?
                new ObjectParameter("estadoID", estadoID) :
                new ObjectParameter("estadoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Estado_Consulta_Result>("Proc_Estado_Consulta", estadoIDParameter);
        }
    
        public virtual int Proc_Estado_Eliminar(Nullable<int> estadoID)
        {
            var estadoIDParameter = estadoID.HasValue ?
                new ObjectParameter("estadoID", estadoID) :
                new ObjectParameter("estadoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Estado_Eliminar", estadoIDParameter);
        }
    
        public virtual int Proc_Estado_Inserta(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Estado_Inserta", estadoParameter);
        }
    
        public virtual ObjectResult<Proc_Factura_Consulta_Result> Proc_Factura_Consulta(Nullable<int> facturaID)
        {
            var facturaIDParameter = facturaID.HasValue ?
                new ObjectParameter("facturaID", facturaID) :
                new ObjectParameter("facturaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Factura_Consulta_Result>("Proc_Factura_Consulta", facturaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Proc_Factura_Inserta(Nullable<int> compra_tipoID, Nullable<int> vendedorID)
        {
            var compra_tipoIDParameter = compra_tipoID.HasValue ?
                new ObjectParameter("compra_tipoID", compra_tipoID) :
                new ObjectParameter("compra_tipoID", typeof(int));
    
            var vendedorIDParameter = vendedorID.HasValue ?
                new ObjectParameter("vendedorID", vendedorID) :
                new ObjectParameter("vendedorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Proc_Factura_Inserta", compra_tipoIDParameter, vendedorIDParameter);
        }
    
        public virtual ObjectResult<Proc_Factura_Producto_Consulta_Result> Proc_Factura_Producto_Consulta(Nullable<int> facturaID, Nullable<int> productoID)
        {
            var facturaIDParameter = facturaID.HasValue ?
                new ObjectParameter("facturaID", facturaID) :
                new ObjectParameter("facturaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Factura_Producto_Consulta_Result>("Proc_Factura_Producto_Consulta", facturaIDParameter, productoIDParameter);
        }
    
        public virtual int Proc_Factura_Producto_Inserta(Nullable<int> facturaID, Nullable<int> productoID)
        {
            var facturaIDParameter = facturaID.HasValue ?
                new ObjectParameter("facturaID", facturaID) :
                new ObjectParameter("facturaID", typeof(int));
    
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Factura_Producto_Inserta", facturaIDParameter, productoIDParameter);
        }
    
        public virtual int Proc_Marca_Actualiza(Nullable<int> marcaID, string marca_nombre, string img)
        {
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var marca_nombreParameter = marca_nombre != null ?
                new ObjectParameter("marca_nombre", marca_nombre) :
                new ObjectParameter("marca_nombre", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Marca_Actualiza", marcaIDParameter, marca_nombreParameter, imgParameter);
        }
    
        public virtual int Proc_Marca_Consulta(Nullable<int> marcaID, string marca_nombre)
        {
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var marca_nombreParameter = marca_nombre != null ?
                new ObjectParameter("marca_nombre", marca_nombre) :
                new ObjectParameter("marca_nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Marca_Consulta", marcaIDParameter, marca_nombreParameter);
        }
    
        public virtual int Proc_Marca_Eliminar(Nullable<int> marcaID)
        {
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Marca_Eliminar", marcaIDParameter);
        }
    
        public virtual int Proc_Marca_Inserta(string marca_nombre, string img)
        {
            var marca_nombreParameter = marca_nombre != null ?
                new ObjectParameter("marca_nombre", marca_nombre) :
                new ObjectParameter("marca_nombre", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Marca_Inserta", marca_nombreParameter, imgParameter);
        }
    
        public virtual int Proc_Modelo_Actualiza(Nullable<int> modeloID, string modelo_nombre, Nullable<int> marcaID, Nullable<int> categoriaID)
        {
            var modeloIDParameter = modeloID.HasValue ?
                new ObjectParameter("modeloID", modeloID) :
                new ObjectParameter("modeloID", typeof(int));
    
            var modelo_nombreParameter = modelo_nombre != null ?
                new ObjectParameter("modelo_nombre", modelo_nombre) :
                new ObjectParameter("modelo_nombre", typeof(string));
    
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Modelo_Actualiza", modeloIDParameter, modelo_nombreParameter, marcaIDParameter, categoriaIDParameter);
        }
    
        public virtual int Proc_Modelo_Consulta(Nullable<int> modeloID, Nullable<int> marcaID)
        {
            var modeloIDParameter = modeloID.HasValue ?
                new ObjectParameter("modeloID", modeloID) :
                new ObjectParameter("modeloID", typeof(int));
    
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Modelo_Consulta", modeloIDParameter, marcaIDParameter);
        }
    
        public virtual int Proc_Modelo_Inserta(string modelo_nombre, Nullable<int> marcaID, Nullable<int> categoriaID)
        {
            var modelo_nombreParameter = modelo_nombre != null ?
                new ObjectParameter("modelo_nombre", modelo_nombre) :
                new ObjectParameter("modelo_nombre", typeof(string));
    
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Modelo_Inserta", modelo_nombreParameter, marcaIDParameter, categoriaIDParameter);
        }
    
        public virtual int Proc_Producto_Actualiza(Nullable<int> productoID, Nullable<decimal> precio_compra, Nullable<decimal> precio_venta, Nullable<int> marcaID, Nullable<int> modeloID, Nullable<int> categoriaID, Nullable<int> estadoID)
        {
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            var precio_compraParameter = precio_compra.HasValue ?
                new ObjectParameter("precio_compra", precio_compra) :
                new ObjectParameter("precio_compra", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var modeloIDParameter = modeloID.HasValue ?
                new ObjectParameter("modeloID", modeloID) :
                new ObjectParameter("modeloID", typeof(int));
    
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            var estadoIDParameter = estadoID.HasValue ?
                new ObjectParameter("estadoID", estadoID) :
                new ObjectParameter("estadoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Producto_Actualiza", productoIDParameter, precio_compraParameter, precio_ventaParameter, marcaIDParameter, modeloIDParameter, categoriaIDParameter, estadoIDParameter);
        }
    
        public virtual int Proc_Producto_Actualiza_Estado(Nullable<int> productoID, string activo)
        {
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Producto_Actualiza_Estado", productoIDParameter, activoParameter);
        }
    
        public virtual ObjectResult<Proc_Producto_Consulta_Result> Proc_Producto_Consulta(Nullable<int> productoID, string serie)
        {
            var productoIDParameter = productoID.HasValue ?
                new ObjectParameter("productoID", productoID) :
                new ObjectParameter("productoID", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("serie", serie) :
                new ObjectParameter("serie", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Producto_Consulta_Result>("Proc_Producto_Consulta", productoIDParameter, serieParameter);
        }
    
        public virtual int Proc_Producto_Inserta(string serie, Nullable<decimal> precio_compra, Nullable<decimal> precio_venta, Nullable<int> marcaID, Nullable<int> modeloID, Nullable<int> categoriaID, Nullable<int> estadoID, Nullable<System.DateTime> fecha_ingreso)
        {
            var serieParameter = serie != null ?
                new ObjectParameter("serie", serie) :
                new ObjectParameter("serie", typeof(string));
    
            var precio_compraParameter = precio_compra.HasValue ?
                new ObjectParameter("precio_compra", precio_compra) :
                new ObjectParameter("precio_compra", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var marcaIDParameter = marcaID.HasValue ?
                new ObjectParameter("marcaID", marcaID) :
                new ObjectParameter("marcaID", typeof(int));
    
            var modeloIDParameter = modeloID.HasValue ?
                new ObjectParameter("modeloID", modeloID) :
                new ObjectParameter("modeloID", typeof(int));
    
            var categoriaIDParameter = categoriaID.HasValue ?
                new ObjectParameter("categoriaID", categoriaID) :
                new ObjectParameter("categoriaID", typeof(int));
    
            var estadoIDParameter = estadoID.HasValue ?
                new ObjectParameter("estadoID", estadoID) :
                new ObjectParameter("estadoID", typeof(int));
    
            var fecha_ingresoParameter = fecha_ingreso.HasValue ?
                new ObjectParameter("fecha_ingreso", fecha_ingreso) :
                new ObjectParameter("fecha_ingreso", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Producto_Inserta", serieParameter, precio_compraParameter, precio_ventaParameter, marcaIDParameter, modeloIDParameter, categoriaIDParameter, estadoIDParameter, fecha_ingresoParameter);
        }
    
        public virtual int Proc_Tipo_Compra_Actualiza(Nullable<int> compra_tipoID, string compra_tipo)
        {
            var compra_tipoIDParameter = compra_tipoID.HasValue ?
                new ObjectParameter("compra_tipoID", compra_tipoID) :
                new ObjectParameter("compra_tipoID", typeof(int));
    
            var compra_tipoParameter = compra_tipo != null ?
                new ObjectParameter("compra_tipo", compra_tipo) :
                new ObjectParameter("compra_tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Tipo_Compra_Actualiza", compra_tipoIDParameter, compra_tipoParameter);
        }
    
        public virtual int Proc_Tipo_Compra_Consulta(Nullable<int> compra_tipoID)
        {
            var compra_tipoIDParameter = compra_tipoID.HasValue ?
                new ObjectParameter("compra_tipoID", compra_tipoID) :
                new ObjectParameter("compra_tipoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Tipo_Compra_Consulta", compra_tipoIDParameter);
        }
    
        public virtual int Proc_Tipo_Compra_Inserta(string compra_tipo)
        {
            var compra_tipoParameter = compra_tipo != null ?
                new ObjectParameter("compra_tipo", compra_tipo) :
                new ObjectParameter("compra_tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Tipo_Compra_Inserta", compra_tipoParameter);
        }
    
        public virtual int Proc_Vendedor_Actualiza(Nullable<int> vendedorID, string vendedor)
        {
            var vendedorIDParameter = vendedorID.HasValue ?
                new ObjectParameter("vendedorID", vendedorID) :
                new ObjectParameter("vendedorID", typeof(int));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Vendedor_Actualiza", vendedorIDParameter, vendedorParameter);
        }
    
        public virtual int Proc_Vendedor_Consulta(Nullable<int> vendedorID, string vendedor)
        {
            var vendedorIDParameter = vendedorID.HasValue ?
                new ObjectParameter("vendedorID", vendedorID) :
                new ObjectParameter("vendedorID", typeof(int));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Vendedor_Consulta", vendedorIDParameter, vendedorParameter);
        }
    
        public virtual int Proc_Vendedor_Inserta(string vendedor)
        {
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Vendedor_Inserta", vendedorParameter);
        }
    
        public virtual ObjectResult<Proc_Producto_Consultar_Todo_Result> Proc_Producto_Consultar_Todo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Producto_Consultar_Todo_Result>("Proc_Producto_Consultar_Todo");
        }
    
        public virtual int Proc_Usuarios_Insertar(string nombre, string correo, string password, string img, string role)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Usuarios_Insertar", nombreParameter, correoParameter, passwordParameter, imgParameter, roleParameter);
        }
    
        public virtual ObjectResult<Proc_Usuarios_Login_Result> Proc_Usuarios_Login(string correo, string password)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Usuarios_Login_Result>("Proc_Usuarios_Login", correoParameter, passwordParameter);
        }
    }
}
